# -*- coding: utf-8 -*-
"""dressMeDaily_MLmodel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jiMhqamJddjWoqCte8GOG-sb4WZBxKnu
"""

import torch
from torchvision import models, transforms
from PIL import Image
import json
import requests

# Download ImageNet class index
class_idx_url = 'https://raw.githubusercontent.com/anishathalye/imagenet-simple-labels/master/imagenet-simple-labels.json'
class_idx = requests.get(class_idx_url).json()

# Load the pre-trained model
model = models.resnet50(weights='ResNet50_Weights.IMAGENET1K_V1')
model.eval()

# Define a transform to preprocess the image
transform = transforms.Compose([
    transforms.Resize(256),
    transforms.CenterCrop(224),
    transforms.ToTensor(),
    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])

# Load an image
image_path = '/content/shirtdemo.jpeg'  # Update this path to your image file
image = Image.open(image_path)
image = transform(image).unsqueeze(0)  # Add batch dimension

# Predict with the model
with torch.no_grad():
    outputs = model(image)
    probabilities = torch.nn.functional.softmax(outputs[0], dim=0)

# Get top 5 probabilities and indices
top5_prob, top5_catid = torch.topk(probabilities, 5)
for i in range(top5_prob.size(0)):
    print(f"{class_idx[top5_catid[i].item()]}: {top5_prob[i].item() * 100:.2f}%")

# Check if the highest prediction is less than 10%
if top5_prob[0].item() < 0.10:
    print("Our AI model cannot confidently detect your image, possibly due to picture quality or file corruption.")
    user_input = input("Would you like to enter the label manually? (yes/no): ")
    if user_input.lower() == 'yes':
        manual_label = input("Enter the name of the image: ")
        print(f"Manual label entered: {manual_label}")
    else:
        print("No manual label entered.")
else:
    # Interact with the user based on the highest prediction
    predicted_label = class_idx[top5_catid[0].item()]
    highest_percentage = top5_prob[0].item() * 100
    print(f"The top prediction is {predicted_label} with a confidence of {highest_percentage:.2f}%. Is that what you expected?")
    user_response = input("Enter 'yes' if correct: ")

    # Handle user response
    if user_response.lower() == 'yes':
      print("Prediction confirmed.")
    else:
      # User inputs new label
      correct_label = input("Enter the correct label for the image: ")
      print(f"New prediction as per user input: {correct_label}")